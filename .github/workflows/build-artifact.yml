name: Build and test artifact

on:
  workflow_call:
    inputs:
      java-version:
        required: false
        type: string
        description: Java version to build with
        default: '17'

jobs:
  build-and-test:
    name: Build and test artifact
    runs-on: ubuntu-latest
    outputs:
      build-tag: ${{ steps.generate-build-tag.outputs.build-tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # checkout gir shallow copy - fetch-depth: 0 vil tilgjengeliggjÃ¸re tags
        with:
          fetch-depth: 0
      - name: Create m2-settings
        uses: whelk-io/maven-settings-xml-action@7c60eb95b2d5ec18f2e0e29f34c9ed69475e7a96 # v21
        with:
          repositories: '[
            { "id": "central", "url": "https://repo1.maven.org/maven2/", "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" } },
            { "id": "github", "url": "https://maven.pkg.github.com/navikt/maven-release", "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" } },
            { "id": "confluent", "url": "https://packages.confluent.io/maven/" }
          ]'
          servers: '[
            { "id": "github", "username": "x-access-token", "password": "${{ secrets.READER_TOKEN }}" }
          ]'
          output_file: settings.xml
      - name: Set up JDK${{ inputs.java-version }} and cache dependencies
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'
          cache: 'maven'
      - name: Download toolchain file
        run: |
          curl https://raw.githubusercontent.com/navikt/dok-workflows/main/resources/toolchains.xml --output toolchains.xml
      - name: Build with Maven
        run: mvn --settings settings.xml --global-toolchains toolchains.xml package
      - name: Generate build tag
        id: generate-build-tag
        run: echo "build-tag=$(ver=$(git describe --abbrev=0 --tags | awk -F \. {'$1++;print $1'}); if ! [[ $ver =~ ^[0-9]+$ ]]; then (echo "1" && git rev-parse --short HEAD) | paste -s -d'-'; else (echo $ver && git rev-parse --short HEAD) | paste -s -d'-' ; fi)" >> $GITHUB_OUTPUT
      - name: Print build tag/artifact version
        id: print-build-tag
        run: echo "Generated build tag is ${{ steps.generate-build-tag.outputs.build-tag }}"
  release-draft:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    uses: navikt/dok-workflows/.github/workflows/release-draft.yml@main
    needs: build-and-test
    with:
      build-tag: ${{ needs.build-and-test.outputs.build-tag }}
