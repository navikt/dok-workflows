name: Build app

on:
  workflow_call:
    outputs:
      build-tag:
        description: "Build tag"
        value: ${{ jobs.build-app.outputs.build-tag }}
    inputs:
      java-version:
        required: false
        type: string
        description: Java version to build with
        default: '17'

jobs:
  build-app:
    name: Build app
    runs-on: ubuntu-latest
    outputs:
      build-tag: ${{ steps.generate-build-tag.outputs.build-tag }}
    steps:
      # prebuild
      - name: Checkout code
        uses: actions/checkout@v4
        # checkout gir shallow copy - fetch-depth: 0 vil tilgjengeliggjÃ¸re tags
        with:
          fetch-depth: 0
      - name: Set up JDK${{ inputs.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'
      - name: Generate ~/.m2/repository cache key
        id: m2-cache-key
        run: echo "keyname=$(date +'maven-week-%U')" >> $GITHUB_OUTPUT
      - name: Cache ~/.m2/repository
        id: cache-m2-repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ steps.m2-cache-key.outputs.keyname }}
      # build tag
      - name: Generate build tag
        id: generate-build-tag
        run: |
          base_number=$(git describe --abbrev=0 --tags | awk -F \. {'$1++;print $1'})
          echo "Build base_number=$base_number"
          if ! [[ $base_number =~ ^[0-9]+$ ]]; then
            build_tag=$((echo "1" && git rev-parse --short HEAD) | paste -s -d'-'); 
          else 
            build_tag=$((echo $base_number && git rev-parse --short HEAD) | paste -s -d'-'); 
          fi
          echo "Generated build-tag=$build_tag"
          echo "build-tag=$(echo $build_tag)" >> $GITHUB_OUTPUT
      # maven build
      - name: Create m2-settings
        uses: whelk-io/maven-settings-xml-action@9dc09b23833fa9aa7f27b63db287951856f3433d # v22
        with:
          repositories: '[
            { "id": "central", "url": "https://repo1.maven.org/maven2/", "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" } },
            { "id": "github", "url": "https://maven.pkg.github.com/navikt/maven-release", "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" } },
            { "id": "confluent", "url": "https://packages.confluent.io/maven/" },
            { "id": "jitpack", "url": "https://jitpack.io" },
            { "id": "shibboleth", "url": "https://build.shibboleth.net/nexus/content/repositories/releases/" }
          ]'
          servers: '[
            { "id": "github", "username": "x-access-token", "password": "${{ secrets.READER_TOKEN }}" }
          ]'
          output_file: settings.xml
      - name: Download toolchain file
        run: |
          curl https://raw.githubusercontent.com/navikt/dok-workflows/main/resources/toolchains.xml --output toolchains.xml
      - name: Set maven artifact version
        run: |
          mvn versions:set -DnewVersion="${{ steps.generate-build-tag.outputs.build-tag }}"
          mvn versions:commit
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots -s settings.xml --global-toolchains toolchains.xml verify
      # docker build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ steps.generate-build-tag.outputs.build-tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        # Temp fix for voksende cache
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
